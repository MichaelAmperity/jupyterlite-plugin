
  var Module = typeof globalThis.Module !== 'undefined' ? globalThis.Module : {};

  if (!Module.expectedDataFileDownloads) {
    Module.expectedDataFileDownloads = 0;
  }

  Module.expectedDataFileDownloads++;
  (function() {
    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to
    // fetch the .data bundle on the worker
    if (Module['ENVIRONMENT_IS_PTHREAD']) return;
    var loadPackage = function(metadata) {

      var PACKAGE_PATH = '';
      if (typeof window === 'object') {
        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {
        // web worker
        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
      }
      var PACKAGE_NAME = 'bqplot-0.12.38-pyhd8ed1ab.0.data';
      var REMOTE_PACKAGE_BASE = 'bqplot-0.12.38-pyhd8ed1ab.0.data';
      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
        Module['locateFile'] = Module['locateFilePackage'];
        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
      }
      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;
var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];

      function fetchRemotePackage(packageName, packageSize, callback, errback) {
        
        var xhr = new XMLHttpRequest();
        xhr.open('GET', packageName, true);
        xhr.responseType = 'arraybuffer';
        xhr.onprogress = function(event) {
          var url = packageName;
          var size = packageSize;
          if (event.total) size = event.total;
          if (event.loaded) {
            if (!xhr.addedTotal) {
              xhr.addedTotal = true;
              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
              Module.dataFileDownloads[url] = {
                loaded: event.loaded,
                total: size
              };
            } else {
              Module.dataFileDownloads[url].loaded = event.loaded;
            }
            var total = 0;
            var loaded = 0;
            var num = 0;
            for (var download in Module.dataFileDownloads) {
            var data = Module.dataFileDownloads[download];
              total += data.total;
              loaded += data.loaded;
              num++;
            }
            total = Math.ceil(total * Module.expectedDataFileDownloads/num);
            if (Module['empackSetStatus']) Module['empackSetStatus']('Downloading',PACKAGE_NAME,loaded,total);
            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
          } else if (!Module.dataFileDownloads) {
            if (Module['setStatus']) Module['setStatus']('Downloading data...');
          }
        };
        xhr.onerror = function(event) {
          throw new Error("NetworkError for: " + packageName);
        }
        xhr.onload = function(event) {
          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            var packageData = xhr.response;
            callback(packageData);
          } else {
            throw new Error(xhr.statusText + " : " + xhr.responseURL);
          }
        };
        xhr.send(null);
      };

      function handleError(error) {
        console.error('package error:', error);
      };

      var fetchedCallback = null;
      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;

      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);

    function runWithFS() {

      function assert(check, msg) {
        if (!check) throw msg + new Error().stack;
      }
Module['FS_createPath']("/", "tmp", true, true);
Module['FS_createPath']("/tmp", "xeus-python-kernel", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel", "envs", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs", "xeus-python-kernel", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel", "conda-meta", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel", "lib", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib", "python3.10", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10", "site-packages", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages", "bqplot-0.12.38.dist-info", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages", "bqplot", true, true);
Module['FS_createPath']("/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot", "map_data", true, true);

      function processPackageData(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file failed.');
        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');
        var byteArray = new Uint8Array(arrayBuffer);
        var curr;
        var compressedData = {"data":null,"cachedOffset":1174028,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1452,2858,4136,5321,6487,7931,9353,10749,11915,12943,13951,15089,16433,17721,18917,20082,21173,22276,23563,24743,25734,26944,28261,29401,30353,31300,32082,33075,34159,35088,35938,36761,37620,38517,39451,40250,41152,42058,42964,43896,44722,45645,46580,47434,48277,49140,50010,50887,51850,52732,53576,54399,55351,56320,57223,58114,59035,59965,60840,61683,62586,63437,64310,65271,66233,67130,67997,68906,69815,70729,71596,72444,73335,74278,75157,76158,76966,77809,78654,79501,80505,81401,82283,83191,84097,84960,85801,86629,87626,88448,89406,90329,91302,92193,93039,93944,94803,95670,96469,97271,98130,98992,99882,100851,101768,102642,103465,104320,105230,106113,106892,107786,108649,109513,110434,111298,112194,113067,113973,114892,115704,116570,117426,118347,119194,120126,121061,121984,122881,123829,124774,125659,126594,127563,128469,129407,130385,131374,132336,133290,134183,135106,136035,136976,137877,138829,139831,140645,141557,142454,143342,144244,145189,146144,147087,147990,148931,149864,150782,151697,152634,153544,154469,155351,156262,157222,158222,159260,160123,161059,161965,162899,163895,164872,165879,166841,167725,168705,169609,170538,171376,172326,173287,174216,175205,176109,177035,178039,179039,180117,181139,182167,183177,184222,185184,186158,187210,188321,189265,190151,191120,192083,193016,193914,194848,195819,196765,197741,198718,199681,200669,201564,202460,203402,204379,205376,206321,207273,208178,209088,210011,210987,211929,212818,213713,214633,215592,216459,217458,218329,219187,220031,220866,221766,222629,223525,224354,225210,225997,226874,227691,228540,229400,230323,231238,232102,233036,233937,234870,235782,236783,237838,238763,239770,240772,241785,242748,243552,244472,245369,246315,247193,248105,249025,249939,250824,251789,252720,253701,254660,255619,256544,257437,258419,259345,260289,261231,262289,263279,264292,265321,266397,267341,268276,269167,270035,270869,271748,272624,273500,274404,275324,276156,277031,277949,278859,279769,280611,281439,282256,283104,283974,284829,285782,286672,287550,288432,289264,290180,291488,292840,294293,295762,297300,298779,300332,301818,303367,304855,306397,307902,309457,311082,312289,313574,314358,315194,316040,316897,317718,318597,319418,320246,321096,321925,322776,323606,324421,325230,326043,326905,327691,328512,329330,330183,331005,331826,332695,333510,334343,335189,336023,336826,337688,338510,339337,340179,340952,341777,342589,343390,344220,345054,345851,346687,347538,348329,349170,350028,350864,351677,352501,353345,354185,355006,355823,356676,357509,358353,359160,359951,360786,361618,362462,363265,364110,364924,365756,366573,367416,368243,369066,369905,370743,371568,372407,373231,374064,374891,375773,376578,377425,378222,379032,379891,380758,381636,382463,383302,384134,384990,385887,386709,387549,388390,389218,390052,390910,391757,392621,393485,394321,395149,395989,396816,397676,398514,399346,400168,400991,401819,402663,403549,404347,405248,406048,406875,407734,408580,409400,410218,411055,411953,412780,413616,414490,415308,416120,416935,417780,418636,419467,420311,421178,422052,422874,423745,424588,425431,426276,427117,427959,428773,429605,430444,431285,432150,432980,433807,434647,435481,436355,437185,438033,438874,439708,440516,441318,442165,443021,443841,444634,445463,446276,447104,447900,448721,449597,450442,451296,452116,452940,453796,454621,455449,456269,457086,457900,458782,459602,460479,461329,462193,463013,463844,464730,465568,466468,467364,468291,469146,470003,470910,471826,472699,473524,474353,475316,476229,476980,477750,478494,479289,480140,481582,482982,484355,485804,487215,488617,490039,491448,492833,494236,495666,497107,498545,499952,501404,502796,504212,505668,507066,508514,509912,511318,512740,514158,515575,516977,518391,519765,521148,522561,523982,525312,526750,528205,529626,530916,532328,533694,535055,536458,537772,539206,540621,542021,543374,544730,546076,547415,548745,550114,551512,552904,554282,555620,556932,558332,559733,561050,562429,563856,565242,566606,568021,569397,570778,572149,573544,574890,576314,577665,579038,580420,581701,583085,584476,585883,587216,588593,589976,591369,592723,594114,595490,596900,598301,599695,601100,602491,603873,605242,606648,608042,609426,610823,612231,613614,615010,616402,617825,619252,620642,621992,623373,624761,626168,627581,628992,630361,631778,633175,634604,636003,637377,638767,640157,641550,642968,644347,645772,647146,648507,649864,651234,652626,654021,655375,656745,658146,659557,660969,662331,663653,665029,666432,667851,669283,670677,672049,673451,674820,676202,677574,678959,680353,681693,683112,684540,685885,687279,688661,690042,691438,692822,694236,695646,697053,698406,699817,701205,702603,704029,705349,706706,708105,709498,710777,712184,713598,714972,716339,717694,719072,720409,721815,723196,724550,725912,727323,728671,730014,731381,732752,734120,735516,736915,738322,739723,741096,742452,743855,745224,746585,747973,749324,750618,751896,753217,754650,756096,757572,759060,760526,761983,763439,764904,766371,767821,769286,770774,772232,773698,775172,776649,778144,779638,781128,782525,783832,785139,786463,788083,789591,790783,792225,793629,795152,796593,798083,799584,801105,802546,804036,805536,807036,808376,809646,810802,811961,813205,814439,815653,816854,818118,819293,820513,821720,822945,824138,825343,826513,827768,828941,830151,831345,832542,833693,834908,836038,837295,838443,839560,840840,841823,843050,844162,845317,846439,847622,848781,849877,851020,852128,853257,854271,855483,856694,857781,858841,860033,861114,862263,863470,864640,865759,866880,868032,869175,870252,871442,872547,873719,874770,875930,877061,878171,879353,880529,881687,882874,883964,885182,886377,887592,888749,889896,891082,892290,893449,894652,895823,896970,898160,899356,900515,901645,902855,904070,905246,906449,907627,908819,910032,911205,912330,913506,914701,915912,917013,918144,919268,920430,921591,922727,923899,925103,926281,927457,928619,929815,931045,932217,933414,934585,935752,936900,938115,939285,940524,941604,942783,944019,945202,946370,947605,948823,949959,951157,952347,953543,954647,955808,956990,958062,959231,960389,961501,962690,963808,965008,966164,967330,968524,969673,970866,972029,973201,974408,975608,976784,977955,979144,980299,981474,982618,983746,984992,986214,987502,988818,990057,991355,992619,993902,995190,996455,997758,999011,1000246,1001570,1002807,1003879,1004942,1006161,1007324,1008212,1009124,1009957,1010789,1011595,1012419,1013362,1014231,1015151,1016426,1017681,1018945,1020225,1021546,1022802,1024124,1025449,1026750,1028081,1029422,1030745,1032018,1033318,1034636,1035925,1037243,1038588,1039940,1041247,1042556,1043846,1045139,1046485,1047774,1049133,1050463,1051791,1053134,1054432,1055688,1056939,1058243,1059568,1060902,1062208,1063529,1064884,1066185,1067528,1068879,1070208,1071532,1072862,1074220,1075573,1076887,1078230,1079563,1081068,1082459,1083814,1084975,1086082,1087474,1088876,1090144,1091217,1092239,1092970,1094240,1095313,1096291,1097323,1097979,1098849,1100134,1100992,1102177,1103259,1104252,1105521,1106582,1107756,1108950,1110157,1111104,1112522,1113883,1115163,1116295,1117507,1118635,1119730,1120935,1121776,1122881,1123724,1124941,1125763,1126757,1128022,1128941,1129862,1131144,1132547,1133931,1135024,1136246,1137362,1138683,1139748,1140751,1141995,1143121,1144355,1145477,1146704,1147733,1148693,1149404,1150182,1150966,1152223,1152870,1153414,1154589,1155980,1157460,1158590,1159671,1160604,1161545,1162766,1163622,1164666,1165601,1167116,1168512,1169811,1170909,1172049,1173274],"sizes":[1452,1406,1278,1185,1166,1444,1422,1396,1166,1028,1008,1138,1344,1288,1196,1165,1091,1103,1287,1180,991,1210,1317,1140,952,947,782,993,1084,929,850,823,859,897,934,799,902,906,906,932,826,923,935,854,843,863,870,877,963,882,844,823,952,969,903,891,921,930,875,843,903,851,873,961,962,897,867,909,909,914,867,848,891,943,879,1001,808,843,845,847,1004,896,882,908,906,863,841,828,997,822,958,923,973,891,846,905,859,867,799,802,859,862,890,969,917,874,823,855,910,883,779,894,863,864,921,864,896,873,906,919,812,866,856,921,847,932,935,923,897,948,945,885,935,969,906,938,978,989,962,954,893,923,929,941,901,952,1002,814,912,897,888,902,945,955,943,903,941,933,918,915,937,910,925,882,911,960,1000,1038,863,936,906,934,996,977,1007,962,884,980,904,929,838,950,961,929,989,904,926,1004,1000,1078,1022,1028,1010,1045,962,974,1052,1111,944,886,969,963,933,898,934,971,946,976,977,963,988,895,896,942,977,997,945,952,905,910,923,976,942,889,895,920,959,867,999,871,858,844,835,900,863,896,829,856,787,877,817,849,860,923,915,864,934,901,933,912,1001,1055,925,1007,1002,1013,963,804,920,897,946,878,912,920,914,885,965,931,981,959,959,925,893,982,926,944,942,1058,990,1013,1029,1076,944,935,891,868,834,879,876,876,904,920,832,875,918,910,910,842,828,817,848,870,855,953,890,878,882,832,916,1308,1352,1453,1469,1538,1479,1553,1486,1549,1488,1542,1505,1555,1625,1207,1285,784,836,846,857,821,879,821,828,850,829,851,830,815,809,813,862,786,821,818,853,822,821,869,815,833,846,834,803,862,822,827,842,773,825,812,801,830,834,797,836,851,791,841,858,836,813,824,844,840,821,817,853,833,844,807,791,835,832,844,803,845,814,832,817,843,827,823,839,838,825,839,824,833,827,882,805,847,797,810,859,867,878,827,839,832,856,897,822,840,841,828,834,858,847,864,864,836,828,840,827,860,838,832,822,823,828,844,886,798,901,800,827,859,846,820,818,837,898,827,836,874,818,812,815,845,856,831,844,867,874,822,871,843,843,845,841,842,814,832,839,841,865,830,827,840,834,874,830,848,841,834,808,802,847,856,820,793,829,813,828,796,821,876,845,854,820,824,856,825,828,820,817,814,882,820,877,850,864,820,831,886,838,900,896,927,855,857,907,916,873,825,829,963,913,751,770,744,795,851,1442,1400,1373,1449,1411,1402,1422,1409,1385,1403,1430,1441,1438,1407,1452,1392,1416,1456,1398,1448,1398,1406,1422,1418,1417,1402,1414,1374,1383,1413,1421,1330,1438,1455,1421,1290,1412,1366,1361,1403,1314,1434,1415,1400,1353,1356,1346,1339,1330,1369,1398,1392,1378,1338,1312,1400,1401,1317,1379,1427,1386,1364,1415,1376,1381,1371,1395,1346,1424,1351,1373,1382,1281,1384,1391,1407,1333,1377,1383,1393,1354,1391,1376,1410,1401,1394,1405,1391,1382,1369,1406,1394,1384,1397,1408,1383,1396,1392,1423,1427,1390,1350,1381,1388,1407,1413,1411,1369,1417,1397,1429,1399,1374,1390,1390,1393,1418,1379,1425,1374,1361,1357,1370,1392,1395,1354,1370,1401,1411,1412,1362,1322,1376,1403,1419,1432,1394,1372,1402,1369,1382,1372,1385,1394,1340,1419,1428,1345,1394,1382,1381,1396,1384,1414,1410,1407,1353,1411,1388,1398,1426,1320,1357,1399,1393,1279,1407,1414,1374,1367,1355,1378,1337,1406,1381,1354,1362,1411,1348,1343,1367,1371,1368,1396,1399,1407,1401,1373,1356,1403,1369,1361,1388,1351,1294,1278,1321,1433,1446,1476,1488,1466,1457,1456,1465,1467,1450,1465,1488,1458,1466,1474,1477,1495,1494,1490,1397,1307,1307,1324,1620,1508,1192,1442,1404,1523,1441,1490,1501,1521,1441,1490,1500,1500,1340,1270,1156,1159,1244,1234,1214,1201,1264,1175,1220,1207,1225,1193,1205,1170,1255,1173,1210,1194,1197,1151,1215,1130,1257,1148,1117,1280,983,1227,1112,1155,1122,1183,1159,1096,1143,1108,1129,1014,1212,1211,1087,1060,1192,1081,1149,1207,1170,1119,1121,1152,1143,1077,1190,1105,1172,1051,1160,1131,1110,1182,1176,1158,1187,1090,1218,1195,1215,1157,1147,1186,1208,1159,1203,1171,1147,1190,1196,1159,1130,1210,1215,1176,1203,1178,1192,1213,1173,1125,1176,1195,1211,1101,1131,1124,1162,1161,1136,1172,1204,1178,1176,1162,1196,1230,1172,1197,1171,1167,1148,1215,1170,1239,1080,1179,1236,1183,1168,1235,1218,1136,1198,1190,1196,1104,1161,1182,1072,1169,1158,1112,1189,1118,1200,1156,1166,1194,1149,1193,1163,1172,1207,1200,1176,1171,1189,1155,1175,1144,1128,1246,1222,1288,1316,1239,1298,1264,1283,1288,1265,1303,1253,1235,1324,1237,1072,1063,1219,1163,888,912,833,832,806,824,943,869,920,1275,1255,1264,1280,1321,1256,1322,1325,1301,1331,1341,1323,1273,1300,1318,1289,1318,1345,1352,1307,1309,1290,1293,1346,1289,1359,1330,1328,1343,1298,1256,1251,1304,1325,1334,1306,1321,1355,1301,1343,1351,1329,1324,1330,1358,1353,1314,1343,1333,1505,1391,1355,1161,1107,1392,1402,1268,1073,1022,731,1270,1073,978,1032,656,870,1285,858,1185,1082,993,1269,1061,1174,1194,1207,947,1418,1361,1280,1132,1212,1128,1095,1205,841,1105,843,1217,822,994,1265,919,921,1282,1403,1384,1093,1222,1116,1321,1065,1003,1244,1126,1234,1122,1227,1029,960,711,778,784,1257,647,544,1175,1391,1480,1130,1081,933,941,1221,856,1044,935,1515,1396,1299,1098,1140,1225,754],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
;
            compressedData['data'] = byteArray;
            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');
            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, true);
            Module['removeRunDependency']('datafile_bqplot-0.12.38-pyhd8ed1ab.0.data');
      };
      Module['addRunDependency']('datafile_bqplot-0.12.38-pyhd8ed1ab.0.data');

      if (!Module.preloadResults) Module.preloadResults = {};

      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }

    }
    if (Module['calledRun']) {
      runWithFS();
    } else {
      if (!Module['preRun']) Module['preRun'] = [];
      Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
    }

    }
loadPackage({"files": [{"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/conda-meta/bqplot-0.12.38-pyhd8ed1ab_0.json", "start": 0, "end": 84}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot-0.12.38.dist-info/direct_url.json", "start": 84, "end": 186}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/__init__.py", "start": 186, "end": 2833}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/_version.py", "start": 2833, "end": 3160}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/axes.py", "start": 3160, "end": 9697}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/colorschemes.py", "start": 9697, "end": 12505}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/default_tooltip.py", "start": 12505, "end": 14799}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/figure.py", "start": 14799, "end": 23842}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/install.py", "start": 23842, "end": 25391}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/interacts.py", "start": 25391, "end": 47946}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/map_data/EuropeMap.json", "start": 47946, "end": 633316}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/map_data/USCountiesMap.json", "start": 633316, "end": 1523591}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/map_data/USStatesMap.json", "start": 1523591, "end": 1897256}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/map_data/WorldMap.json", "start": 1897256, "end": 2020798}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/market_map.py", "start": 2020798, "end": 2030246}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/marks.py", "start": 2030246, "end": 2105746}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/plotting_widgets.py", "start": 2105746, "end": 2112732}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/pyplot.py", "start": 2112732, "end": 2160272}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/scales.py", "start": 2160272, "end": 2179619}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/toolbar.py", "start": 2179619, "end": 2182378}, {"filename": "/tmp/xeus-python-kernel/envs/xeus-python-kernel/lib/python3.10/site-packages/bqplot/traits.py", "start": 2182378, "end": 2192483}]});
  })();
